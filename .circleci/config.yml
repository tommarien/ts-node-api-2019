version: 2.1
executors:
  node_lts: # declares a reusable executor
    docker:
      - image: &NODE_VERSION node:14.15.5
    working_directory: ~/repo
jobs:
  build:
    executor: node_lts
    steps:
      - checkout

      - restore_cache:
          keys:
            - yarn-v14-{{ checksum "yarn.lock" }}

      - run: yarn install

      - save_cache:
          key: yarn-v14-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules

      - run: yarn lint
  test:
    docker:
      - image: *NODE_VERSION
      - image: circleci/postgres:12.5
        environment:
          POSTGRES_USER: node-api
          POSTGRES_PASSWORD: our-secret
          POSTGRES_DB: ts-node-api
    working_directory: ~/repo
    environment:
      PGDATABASE: ts-node-api
      PGUSER: node-api
      PGPASSWORD: our-secret
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-v14-{{ checksum "yarn.lock" }}

      - run: yarn install

      - run: yarn migrate up

      - run: mkdir ~/jest

      - run: JEST_JUNIT_OUTPUT_DIR=~/jest JEST_JUNIT_OUTPUT_NAME=test-int-junit.xml yarn test --ci --reporters=default --reporters=jest-junit

      - store_test_results:
          path: ~/jest
  deploy-to-heroku:
    executor: node_lts
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-v14-{{ checksum "yarn.lock" }}

      - run: yarn build
      # add installed SSH key using the unique fingerprint
      - add_ssh_keys:
          fingerprints:
              - "ff:ed:4a:ed:6e:ff:75:c1:07:67:9a:e8:f6:4c:da:7c"

      # set up heroku for deployment
      - run: bash .circleci/setup-heroku.sh

      - run:
          name: Configure Git
          command: |
              git config user.name ${CIRCLE_USERNAME}
              git config user.email $GIT_EMAIL
      # deploy to Heroku
      - run:
          name: Deploy to Heroku
          command: |
              cd dist
              git add -A
              git commit -m 'Created Build'
              # check local branch to determine what Heroku git to use
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                  git remote add heroku https://git.heroku.com/ts-node-api-tm.git
                  git push -f heroku ${CIRCLE_BRANCH}:master
              fi
workflows:
  version: 2
  complete:
    jobs:
      - build
      - test:
          requires:
            - build
      - hold:
          type: approval
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - heroku/deploy-via-git:
          requires:
            - hold
          filters:
            branches:
              only:
                - master
